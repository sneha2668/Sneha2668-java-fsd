package AssistedPracticeProject3;
public class DeleteFirstOccurence {
    public static void main(String[] args) {
        // Create a singly linked list.
        Node head = new Node(10);
        head.next = new Node(20);
        head.next.next = new Node(30);
        head.next.next.next = new Node(40);

        // Print the linked list before deletion.
        print(head);

        // Delete the first occurrence of the key 30.
        head = delete(head, 30);

        // Print the linked list after deletion.
        print(head);
    }

    private static Node delete(Node head, int key) {
        // If the linked list is empty, return null.
        if (head == null) {
            return null;
        }

        // If the key is found in the head node, return the next node.
        if (head.data == key) {
            return head.next;
        }

        // Find the node before the node to be deleted.
        Node current = head;
        Node previous = null;
        while (current != null && current.data != key) {
            previous = current;
            current = current.next;
        }

        // If the key is not found in the linked list, return the head node.
        if (current == null) {
            return head;
        }

        // Delete the node.
        previous.next = current.next;

        return head;
    }

    private static void print(Node head) {
        Node current = head;
        while (current != null) {
            System.out.print(current.data + " ");
            current = current.next;
        }
        System.out.println();
    }
}

