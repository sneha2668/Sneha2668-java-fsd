package AssistedPracticeProject;

public class SynchronizationDemo {

	    public static void main(String[] args) {
	        SharedCounter counter = new SharedCounter();

	        Thread thread1 = new Thread(() -> {
	            for (int i = 0; i < 1000; i++) {
	                counter.increment();
	            }
	        });

	        Thread thread2 = new Thread(() -> {
	            for (int i = 0; i < 1000; i++) {
	                counter.decrement();
	            }
	        });

	        thread1.start();
	        thread2.start();

	        try {
	            thread1.join();
	            thread2.join();
	        } catch (InterruptedException e) {
	            e.printStackTrace();
	        }

	        System.out.println("Counter value: " + counter.getValue());
	    }
	}

	class SharedCounter {
	    private int value = 1000;

	    public synchronized void increment() {
	        value++;
	    }

	    public synchronized void decrement() {
	        value--;
	    }

	    public synchronized int getValue() {
	        return value;
	    }
	}
